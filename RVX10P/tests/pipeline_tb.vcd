$date
	Thu Oct 30 23:30:45 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_pipeline $end
$var wire 32 ! WriteData [31:0] $end
$var wire 1 " MemWrite $end
$var wire 32 # DataAdr [31:0] $end
$var reg 1 $ clk $end
$var reg 1 % reset $end
$scope module dut $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 32 & WriteData [31:0] $end
$var wire 32 ' ReadData [31:0] $end
$var wire 32 ( PC [31:0] $end
$var wire 1 " MemWrite $end
$var wire 32 ) InstrIF [31:0] $end
$var wire 32 * DataAdr [31:0] $end
$scope module cpu $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 32 + WriteData_out [31:0] $end
$var wire 32 , ReadData [31:0] $end
$var wire 32 - PC [31:0] $end
$var wire 1 " MemWrite_out $end
$var wire 32 . InstrIF [31:0] $end
$var wire 32 / DataAdr_out [31:0] $end
$scope module dp $end
$var wire 32 0 ALU_srcA [31:0] $end
$var wire 32 1 DataAdr_out [31:0] $end
$var wire 32 2 EXMEM_ALUOut [31:0] $end
$var wire 5 3 EXMEM_Rd [4:0] $end
$var wire 1 4 EXMEM_RegWrite $end
$var wire 5 5 EX_Rs1 [4:0] $end
$var wire 5 6 EX_Rs2 [4:0] $end
$var wire 32 7 InstrD [31:0] $end
$var wire 5 8 MEMWB_Rd [4:0] $end
$var wire 1 9 MEMWB_RegWrite $end
$var wire 32 : MEMWB_Result [31:0] $end
$var wire 1 " MemWrite_out $end
$var wire 32 ; PC [31:0] $end
$var wire 1 < PCSrc $end
$var wire 32 = WriteData_out [31:0] $end
$var wire 1 $ clk $end
$var wire 1 > flushD $end
$var wire 1 % reset $end
$var wire 1 ? stallF $end
$var wire 1 @ stallD $end
$var wire 12 A immS [11:0] $end
$var wire 21 B immJ [20:0] $end
$var wire 12 C immI [11:0] $end
$var wire 13 D immB [12:0] $end
$var wire 1 E flushE $end
$var wire 1 F ZeroE $end
$var wire 32 G WB_value [31:0] $end
$var wire 5 H Rs2D [4:0] $end
$var wire 5 I Rs1D [4:0] $end
$var wire 2 J ResultSrcD [1:0] $end
$var wire 1 K RegWriteD $end
$var wire 32 L ReadData2D [31:0] $end
$var wire 32 M ReadData1D [31:0] $end
$var wire 32 N ReadData [31:0] $end
$var wire 5 O RdD [4:0] $end
$var wire 32 P PC_plus4 [31:0] $end
$var wire 32 Q PC_next [31:0] $end
$var wire 32 R PCTarget [31:0] $end
$var wire 1 S MemWriteD $end
$var wire 1 T MemToRegD $end
$var wire 1 U MemReadE $end
$var wire 1 V JumpD $end
$var wire 32 W InstrIF [31:0] $end
$var wire 2 X ImmSrcD [1:0] $end
$var wire 2 Y ForwardB [1:0] $end
$var wire 2 Z ForwardA [1:0] $end
$var wire 1 [ BranchD $end
$var wire 32 \ ALU_srcB [31:0] $end
$var wire 32 ] ALU_resultE [31:0] $end
$var wire 1 ^ ALUSrcD $end
$var wire 2 _ ALUOpD [1:0] $end
$var parameter 5 ` ALU_ABS $end
$var parameter 5 a ALU_ADD $end
$var parameter 5 b ALU_AND $end
$var parameter 5 c ALU_ANDN $end
$var parameter 5 d ALU_MAX $end
$var parameter 5 e ALU_MAXU $end
$var parameter 5 f ALU_MIN $end
$var parameter 5 g ALU_MINU $end
$var parameter 5 h ALU_OR $end
$var parameter 5 i ALU_ORN $end
$var parameter 5 j ALU_ROL $end
$var parameter 5 k ALU_ROR $end
$var parameter 5 l ALU_SLL $end
$var parameter 5 m ALU_SLT $end
$var parameter 5 n ALU_SRL $end
$var parameter 5 o ALU_SUB $end
$var parameter 5 p ALU_XNOR $end
$var parameter 5 q ALU_XOR $end
$var reg 5 r ALUControlE [4:0] $end
$var reg 32 s ALU_input_A [31:0] $end
$var reg 32 t ALU_input_B [31:0] $end
$var reg 1 u BranchTaken $end
$var reg 1 v EXMEM_MemToReg_local $end
$var reg 1 w EXMEM_MemWrite_local $end
$var reg 1 x EXMEM_RegWrite_local $end
$var reg 32 y EXMEM_aluOut [31:0] $end
$var reg 5 z EXMEM_rd [4:0] $end
$var reg 32 { EXMEM_writeData [31:0] $end
$var reg 32 | ForwardedStoreData [31:0] $end
$var reg 2 } IDEX_ALUOp [1:0] $end
$var reg 1 ~ IDEX_ALUSrc $end
$var reg 1 !" IDEX_Branch $end
$var reg 32 "" IDEX_Imm [31:0] $end
$var reg 1 #" IDEX_Jump $end
$var reg 1 $" IDEX_MemToReg $end
$var reg 1 %" IDEX_MemWrite $end
$var reg 32 &" IDEX_PC [31:0] $end
$var reg 5 '" IDEX_Rd [4:0] $end
$var reg 32 (" IDEX_ReadData1 [31:0] $end
$var reg 32 )" IDEX_ReadData2 [31:0] $end
$var reg 1 *" IDEX_RegWrite $end
$var reg 2 +" IDEX_ResultSrc [1:0] $end
$var reg 5 ," IDEX_Rs1 [4:0] $end
$var reg 5 -" IDEX_Rs2 [4:0] $end
$var reg 3 ." IDEX_funct3 [2:0] $end
$var reg 7 /" IDEX_funct7 [6:0] $end
$var reg 7 0" IDEX_opcode [6:0] $end
$var reg 32 1" IFID_Instr [31:0] $end
$var reg 32 2" IFID_PC [31:0] $end
$var reg 32 3" ImmExtD [31:0] $end
$var reg 1 4" MEMWB_MemToReg_local $end
$var reg 1 5" MEMWB_RegWrite_local $end
$var reg 32 6" MEMWB_aluOut [31:0] $end
$var reg 5 7" MEMWB_rd [4:0] $end
$var reg 32 8" MEMWB_readData [31:0] $end
$var reg 32 9" PC_reg [31:0] $end
$var reg 32 :" branch_count [31:0] $end
$var reg 32 ;" cycle_count [31:0] $end
$var reg 32 <" flush_count [31:0] $end
$var reg 32 =" instr_retired [31:0] $end
$var reg 32 >" stall_count [31:0] $end
$var integer 32 ?" i [31:0] $end
$scope function alu_core $end
$upscope $end
$scope function aluctrl $end
$upscope $end
$scope module ctrl $end
$var wire 7 @" opcode [6:0] $end
$var reg 2 A" ALUOp [1:0] $end
$var reg 1 ^ ALUSrc $end
$var reg 1 [ Branch $end
$var reg 2 B" ImmSrc [1:0] $end
$var reg 1 V Jump $end
$var reg 1 T MemToReg $end
$var reg 1 S MemWrite $end
$var reg 1 K RegWrite $end
$var reg 2 C" ResultSrc [1:0] $end
$upscope $end
$scope module fwd $end
$var wire 5 D" RdM [4:0] $end
$var wire 5 E" RdW [4:0] $end
$var wire 1 4 RegWriteM $end
$var wire 1 9 RegWriteW $end
$var wire 5 F" Rs1E [4:0] $end
$var wire 5 G" Rs2E [4:0] $end
$var reg 2 H" ForwardA [1:0] $end
$var reg 2 I" ForwardB [1:0] $end
$upscope $end
$scope module hunit $end
$var wire 1 U MemReadE $end
$var wire 5 J" RdE [4:0] $end
$var wire 5 K" Rs1D [4:0] $end
$var wire 5 L" Rs2D [4:0] $end
$var reg 1 E flushE $end
$var reg 1 @ stallD $end
$var reg 1 ? stallF $end
$upscope $end
$upscope $end
$upscope $end
$scope module dmem $end
$var wire 32 M" a [31:0] $end
$var wire 1 $ clk $end
$var wire 32 N" rd [31:0] $end
$var wire 1 % reset $end
$var wire 32 O" wd [31:0] $end
$var wire 1 " we $end
$var integer 32 P" i [31:0] $end
$upscope $end
$scope module imem $end
$var wire 32 Q" a [31:0] $end
$var wire 32 R" rd [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100 q
b1010 p
b1 o
b111 n
b101 m
b110 l
b10000 k
b1111 j
b1001 i
b11 h
b1101 g
b1011 f
b1110 e
b1100 d
b1000 c
b10 b
b0 a
b10001 `
$end
#0
$dumpvars
b10100000000000100010011 R"
b0 Q"
b1000000 P"
b0 O"
b0 N"
b0 M"
b0 L"
b0 K"
b0 J"
b0 I"
b0 H"
b0 G"
b0 F"
b0 E"
b0 D"
b0 C"
b0 B"
b10 A"
b10011 @"
b100000 ?"
b0 >"
b0 ="
b0 <"
b0 ;"
b0 :"
b0 9"
b0 8"
b0 7"
b0 6"
05"
04"
b0 3"
b0 2"
b10011 1"
b0 0"
b0 /"
b0 ."
b0 -"
b0 ,"
b0 +"
0*"
b0 )"
b0 ("
b0 '"
b0 &"
0%"
0$"
0#"
b0 ""
0!"
0~
b0 }
b0 |
b0 {
b0 z
b0 y
0x
0w
0v
0u
b0 t
b0 s
b0 r
b10 _
1^
b0 ]
b0 \
0[
b0 Z
b0 Y
b0 X
b10100000000000100010011 W
0V
0U
0T
0S
b0 R
b100 Q
b100 P
b0 O
b0 N
b0 M
b0 L
1K
b0 J
b0 I
b0 H
b0 G
1F
0E
b0 D
b0 C
b0 B
b0 A
0@
0?
0>
b0 =
0<
b0 ;
b0 :
09
b0 8
b10011 7
b0 6
b0 5
04
b0 3
b0 2
b0 1
b0 0
b0 /
b10100000000000100010011 .
b0 -
b0 ,
b0 +
b0 *
b10100000000000100010011 )
b0 (
b0 '
b0 &
1%
1$
b0 #
0"
b0 !
$end
#5000
0$
#10000
1$
#15000
0$
#20000
1$
#22000
0%
#25000
0$
#30000
b101 3"
b101 H
b101 L"
b10 O
b101 C
b10 A
b10 D
b100000000100 B
b1000 Q
b110000000000000110010011 )
b110000000000000110010011 .
b110000000000000110010011 W
b110000000000000110010011 R"
b10011 0"
b10 }
1~
1*"
b10100000000000100010011 7
b10100000000000100010011 1"
b1000 P
b100 (
b100 -
b100 ;
b100 Q"
b100 9"
b1 ;"
1$
#35000
0$
#40000
b1100 3"
0F
b101 ]
b1100 Q
b11111111011100011000001110010011 )
b11111111011100011000001110010011 .
b11111111011100011000001110010011 W
b11111111011100011000001110010011 R"
b1100 H
b1100 L"
b11 O
b1100 C
b11 A
b100000000010 D
b1100 B
b101 t
b101 \
b10 ;"
b1100 P
b1000 (
b1000 -
b1000 ;
b1000 Q"
b1000 9"
b110000000000000110010011 7
b110000000000000110010011 1"
b100 2"
b10 '"
b10 J"
b101 6
b101 G"
b101 -"
b101 R
b101 ""
14
1x
1$
#45000
0$
#50000
b1100 ]
b11111111111111111111111111110111 3"
b1100 t
b1100 \
b11 I
b11 K"
b10111 H
b10111 L"
b111 O
b111111110111 C
b111111100111 A
b1111111100110 D
b100011000111111110110 B
b10000 Q
b1000111110001000110011 )
b1000111110001000110011 .
b1000111110001000110011 W
b1000111110001000110011 R"
19
15"
b10 3
b10 D"
b10 z
b101 #
b101 *
b101 /
b101 1
b101 M"
b101 2
b101 y
b11 '"
b11 J"
b1100 6
b1100 G"
b1100 -"
b100 &"
b10000 R
b1100 ""
b11111111011100011000001110010011 7
b11111111011100011000001110010011 1"
b1000 2"
b10000 P
b1100 (
b1100 -
b1100 ;
b1100 Q"
b1100 9"
b11 ;"
1$
#55000
0$
#60000
b10 _
b10 A"
0^
1K
b10 3"
b11111111111111111111111111110111 t
0F
b10101 ]
b10100 Q
b10000011111001010110011 )
b10000011111001010110011 .
b10000011111001010110011 W
b10000011111001010110011 R"
b111 I
b111 K"
b10 H
b10 L"
b100 O
b110011 @"
b10 C
b100 A
b100 D
b111110000000000010 B
b1 r
b11111111111111111111111111110111 \
b1100 s
b1 Z
b1 H"
b101 :
b101 G
b100 ;"
b10100 P
b10000 (
b10000 -
b10000 ;
b10000 Q"
b10000 9"
b1000111110001000110011 7
b1000111110001000110011 1"
b1100 2"
b1111111 /"
b111 '"
b111 J"
b10111 6
b10111 G"
b10111 -"
b11 5
b11 F"
b11 ,"
b1000 &"
b11111111111111111111111111111111 R
b11111111111111111111111111110111 ""
b11 3
b11 D"
b11 z
b1100 #
b1100 *
b1100 /
b1100 1
b1100 M"
b1100 2
b1100 y
b10 8
b10 E"
b10 7"
b101 6"
1$
#65000
0$
#70000
b100 3"
b1100 :
b1100 G
b11 r
b0 t
b10101 s
b1 Z
b1 H"
b0 \
b11 I
b11 K"
b100 H
b100 L"
b101 O
b100 C
b101 A
b100000000100 D
b11111000000000100 B
b11000 Q
b10000101000001010110011 )
b10000101000001010110011 .
b10000101000001010110011 W
b10000101000001010110011 R"
b1 ="
b11 8
b11 E"
b11 7"
b1100 6"
b111 3
b111 D"
b111 z
b10101 #
b10101 *
b10101 /
b10101 1
b10101 M"
b10101 2
b10101 y
b110011 0"
b0 /"
b110 ."
0~
b100 '"
b100 J"
b10 6
b10 G"
b10 -"
b111 5
b111 F"
b111 ,"
b1100 &"
b1110 R
b10 ""
b10000011111001010110011 7
b10000011111001010110011 1"
b10000 2"
b11000 P
b10100 (
b10100 -
b10100 ;
b10100 Q"
b10100 9"
b101 ;"
1$
#75000
0$
#80000
1F
b0 ]
b11100 Q
b10011100101000100001100011 )
b10011100101000100001100011 .
b10011100101000100001100011 W
b10011100101000100001100011 R"
b101 I
b101 K"
b101000000000000100 B
b10 r
b10101 t
b0 s
b10101 |
b1 Y
b1 I"
b0 Z
b0 H"
b10101 :
b10101 G
b10 ="
b110 ;"
b11100 P
b11000 (
b11000 -
b11000 ;
b11000 Q"
b11000 9"
b10000101000001010110011 7
b10000101000001010110011 1"
b10100 2"
b111 ."
b101 '"
b101 J"
b100 6
b100 G"
b100 -"
b11 5
b11 F"
b11 ,"
b10000 &"
b10100 R
b100 ""
b100 3
b100 D"
b100 z
b111 8
b111 E"
b111 7"
b10101 6"
1$
#85000
0$
#90000
0F
b10101 ]
b10101 L
b10 X
b10 B"
1[
b1 _
b1 A"
0K
b110000 3"
b10101 |
b0 r
b10101 t
b1 Z
b1 H"
b10 Y
b10 I"
b111 H
b111 L"
b10000 O
b1100011 @"
b100111 C
b110000 A
b110000 D
b101000100000100110 B
b100000 Q
b10000011010001000110011 )
b10000011010001000110011 .
b10000011010001000110011 W
b10000011010001000110011 R"
b11 ="
b100 8
b100 E"
b100 7"
b101 3
b101 D"
b101 z
b10101 !
b10101 &
b10101 +
b10101 =
b10101 O"
b10101 {
b0 #
b0 *
b0 /
b0 1
b0 M"
b0 2
b0 y
b0 ."
b101 5
b101 F"
b101 ,"
b11000 R
b10100 &"
b10011100101000100001100011 7
b10011100101000100001100011 1"
b11000 2"
b100000 P
b11100 (
b11100 -
b11100 ;
b11100 Q"
b11100 9"
b111 ;"
1$
#95000
0$
#100000
1>
1<
1u
1F
b0 ]
b1100 M
1K
b0 X
b0 B"
b10 _
b10 A"
0[
b100 3"
b1001000 Q
b100000010001100011 )
b100000010001100011 .
b100000010001100011 W
b100000010001100011 R"
b11 I
b11 K"
b100 H
b100 L"
b100 O
b110011 @"
b100 C
b100 A
b100 D
b11010000000000100 B
b1 r
b10101 \
b10101 s
b10101 t
b0 Y
b0 I"
b1 Z
b1 H"
b0 :
b0 G
b100 ="
b1000 ;"
b100100 P
b100000 (
b100000 -
b100000 ;
b100000 Q"
b100000 9"
b10000011010001000110011 7
b10000011010001000110011 1"
b11100 2"
b1100011 0"
b1 /"
b1 }
1!"
0*"
b10000 '"
b10000 J"
b111 6
b111 G"
b111 -"
b11000 &"
b1001000 R
b110000 ""
b10101 )"
b10101 #
b10101 *
b10101 /
b10101 1
b10101 M"
b10101 2
b10101 y
b101 8
b101 E"
b101 7"
b0 6"
1$
#105000
0$
#110000
0>
0<
0F
b1 ]
b0 M
b0 L
1^
b10 _
b10 A"
1K
b0 3"
b10101 :
b10101 G
b101 r
0u
b0 Z
b0 H"
b1001100 Q
b1100 s
b0 I
b0 K"
b0 H
b0 L"
b0 O
b10011 @"
b0 C
b0 A
b0 D
b0 B
b100100010000000100110011 )
b100100010000000100110011 .
b100100010000000100110011 W
b100100010000000100110011 R"
b101 ="
b10101 6"
04
0x
b10000 3
b10000 D"
b10000 z
b0 #
b0 *
b0 /
b0 1
b0 M"
b0 2
b0 y
b110011 0"
b0 /"
b10 ."
b10 }
0!"
1*"
b100 '"
b100 J"
b100 6
b100 G"
b100 -"
b11 5
b11 F"
b11 ,"
b11100 &"
b100000 R
b100 ""
b1100 0
b1100 ("
b10011 7
b10011 1"
b0 2"
b1001100 P
b1001000 (
b1001000 -
b1001000 ;
b1001000 Q"
b1001000 9"
b1001 ;"
1$
#115000
0$
#120000
1F
b101 M
b10 _
b10 A"
0^
1K
b1001 3"
b0 t
b0 ]
b1010000 Q
b10001000011010000000100011 )
b10001000011010000000100011 .
b10001000011010000000100011 W
b10001000011010000000100011 R"
b10 I
b10 K"
b1001 H
b1001 L"
b10 O
b110011 @"
b1001 C
b10 A
b10 D
b10000100000001000 B
b0 r
b0 \
b0 s
b0 |
b0 :
b0 G
b110 ="
b1010 ;"
b1010000 P
b1001100 (
b1001100 -
b1001100 ;
b1001100 Q"
b1001100 9"
b100100010000000100110011 7
b100100010000000100110011 1"
b1001000 2"
b10011 0"
b0 ."
1~
b0 '"
b0 J"
b0 6
b0 G"
b0 -"
b0 5
b0 F"
b0 ,"
b0 &"
b0 R
b0 ""
b0 )"
b0 0
b0 ("
14
1x
b100 3
b100 D"
b100 z
b1 #
b1 *
b1 /
b1 1
b1 M"
b1 2
b1 y
09
05"
b10000 8
b10000 E"
b10000 7"
b0 6"
1$
#125000
0$
#130000
0F
b101 ]
b1100 M
b101 L
b1 X
b1 B"
1^
1S
b0 _
b0 A"
0K
b100000 3"
b1 :
b1 G
b101 s
b11 I
b11 K"
b10 H
b10 L"
b0 O
b100011 @"
b100010 C
b100000 A
b100000 D
b11010000000100010 B
b1010100 Q
b1000010000000001100011 )
b1000010000000001100011 .
b1000010000000001100011 W
b1000010000000001100011 R"
19
15"
b100 8
b100 E"
b100 7"
b1 6"
b0 3
b0 D"
b0 z
b0 !
b0 &
b0 +
b0 =
b0 O"
b0 {
b0 #
b0 *
b0 /
b0 1
b0 M"
b0 2
b0 y
b110011 0"
0~
b10 '"
b10 J"
b1001 6
b1001 G"
b1001 -"
b10 5
b10 F"
b10 ,"
b1001000 &"
b1010001 R
b1001 ""
b101 0
b101 ("
b10001000011010000000100011 7
b10001000011010000000100011 1"
b1001100 2"
b1010100 P
b1010000 (
b1010000 -
b1010000 ;
b1010000 Q"
b1010000 9"
b1011 ;"
1$
#135000
0$
#140000
b101 M
b1 _
b1 A"
1[
b10 X
b10 B"
0^
0S
b0 3"
b100000 t
b101100 ]
b1011000 Q
bx )
bx .
bx W
bx R"
b10 I
b10 K"
b1100011 @"
b10 C
b0 A
b0 D
b10000000000000010 B
b100000 \
b1100 s
b101 |
b1 Y
b1 I"
b0 :
b0 G
b111 ="
b1100 ;"
b1011000 P
b1010100 (
b1010100 -
b1010100 ;
b1010100 Q"
b1010100 9"
b1000010000000001100011 7
b1000010000000001100011 1"
b1010000 2"
b100011 0"
b1 /"
b10 ."
b0 }
1~
1%"
0*"
b0 '"
b0 J"
b10 6
b10 G"
b10 -"
b11 5
b11 F"
b11 ,"
b1001100 &"
b1101100 R
b100000 ""
b101 )"
b1100 0
b1100 ("
b10 3
b10 D"
b10 z
b101 #
b101 *
b101 /
b101 1
b101 M"
b101 2
b101 y
b0 8
b0 E"
b0 7"
b0 6"
1$
#145000
0$
#150000
1>
1<
1u
1F
b0 ]
bx M
bx L
b0 X
b0 B"
b0 _
b0 A"
0[
bx 3"
b101 :
b101 G
b101 |
b1 r
b10 Z
b10 H"
b10 Y
b10 I"
b101 \
b101 t
b101 s
bx I
bx K"
bx H
bx L"
bx O
bx @"
bx C
bx A
bx0 D
bx0 B
b1010000 Q
b10 8
b10 E"
b10 7"
b101 6"
1"
1w
04
0x
b0 3
b0 D"
b0 z
b101 !
b101 &
b101 +
b101 =
b101 O"
b101 {
b101100 #
b101100 *
b101100 /
b101100 1
b101100 M"
b101100 2
b101100 y
b1100011 0"
b0 /"
b0 ."
b1 }
1!"
0~
0%"
b10 5
b10 F"
b10 ,"
b1010000 &"
b1010000 R
b0 ""
b101 0
b101 ("
bx 7
bx 1"
b1010100 2"
b1011100 P
b1011000 (
b1011000 -
b1011000 ;
b1011000 Q"
b1011000 9"
b1101 ;"
1$
#155000
0$
